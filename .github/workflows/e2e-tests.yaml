name: E2E test matrix

on:
  push: {}
  pull_request:
    branches:
      - master
      - release-*

jobs:
  build-image:
    runs-on: ubuntu-latest
    steps:
    - name: checkout codes
      uses: actions/checkout@v2
    - name: build e2e images
      run: |
        make image e2e-image
    - name: save docker images
      run: |
        mkdir -p ./output/saved-images
        docker image save localhost:5000/chaos-mesh/chaos-dashboard:latest > ./output/saved-images/chaos-dashboard.tgz
        docker image save localhost:5000/chaos-mesh/chaos-daemon:latest > ./output/saved-images/chaos-daemon.tgz
        docker image save localhost:5000/chaos-mesh/chaos-mesh:latest > ./output/saved-images/chaos-mesh.tgz
        docker image save localhost:5000/pingcap/e2e-helper > ./output/saved-images/e2e-helper.tgz
    - name: upload saved images
      uses: actions/upload-artifact@v2
      with:
        name: saved-images
        path: ./output/saved-images
        retention-days: 7
  build-e2e-binary:
    runs-on: ubuntu-latest
    steps:
    - name: checkout codes
      uses: actions/checkout@v2
    - name: build e2e binary
      run: |
        make e2e-build
    - name: upload e2e binary
      uses: actions/upload-artifact@v2
      with:
        name: e2e-binary
        path: ./e2e-test/image/e2e/bin
        retention-days: 7
  e2e-all-tests:
    needs:
    - build-image
    - build-e2e-binary
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        kubernetes-version:
          - v1.20.7
          - v1.21.1
        focus:
          - PodChaos
          - TimeChaos
          - IOChaos
          - HTTPChaos
          - NetworkChaos
          - DNSChaos
          - StressChaos
    steps:
    - name: checkout codes
      uses: actions/checkout@v2
    - name: download saved images
      uses: actions/download-artifact@v2
      with:
        name: saved-images
        path: ./output/saved-images
    - name: restore e2e images
      run: |
        docker load -i ./output/saved-images/chaos-dashboard.tgz
        docker load -i ./output/saved-images/chaos-daemon.tgz
        docker load -i ./output/saved-images/chaos-mesh.tgz
        docker load -i ./output/saved-images/e2e-helper.tgz
    - name: download e2e binary
      uses: actions/download-artifact@v2
      with:
        name: e2e-binary
        path: ./output/e2e-binary
    - name: move e2e binary
      run: |
        mkdir -p ./e2e-test/image/e2e/bin
        mv ./output/e2e-binary/ginkgo ./e2e-test/image/e2e/bin/ginkgo
        mv ./output/e2e-binary/e2e.test ./e2e-test/image/e2e/bin/e2e.test
        chmod +x ./e2e-test/image/e2e/bin/ginkgo
        chmod +x ./e2e-test/image/e2e/bin/e2e.test
    - name: Setup minikube
      uses: manusa/actions-setup-minikube@v2.4.3
      with:
        driver: docker
        minikube version: v1.23.0
        kubernetes version: ${{ matrix.kubernetes-version }}
    - name: Setup Helm
      uses: azure/setup-helm@v1
    - name: Install Chaos Mesh
      run: |
        helm upgrade --wait --install --create-namespace chaos-mesh helm/chaos-mesh --namespace=chaos-testing --set images.registry=localhost:5000 --set dnsServer.create=true --set dashboard.create=true;
    - name: e2e tests
      env:
        FOCUS: ${{ matrix.focus }}
      run: |
        KUBECONFIG=~/.kube/config ./e2e-test/image/e2e/bin/ginkgo -p -focus="${FOCUS}" ./e2e-test/image/e2e/bin/e2e.test -- --e2e-image localhost:5000/pingcap/e2e-helper:latest
    - name: post run - extract logs from kubernetes
      if: always()
      run: |
        mkdir -p ./output/chaos-mesh-logs
        for pod in $(kubectl -n chaos-testing get pods --no-headers | awk '{print $1}'); do kubectl -n chaos-testing logs $pod > ./output/chaos-mesh-logs/$pod.log; done;

    - name: post run - upload Chaos Mesh components logs
      if: always()
      uses: actions/upload-artifact@v2
      with:
        path: ./output/chaos-mesh-logs
        retention-days: 7
